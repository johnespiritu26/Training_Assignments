React Assignment:1 

1. Install NodeJs, Visual studio code 

2. create a Welcome component  to greet the user using a javascript function, 

with a property called as name. Apply some css styling.Use the component in App  component. 

--welocome.js--
import React, { Component } from 'react';   
  
export default class Welcome extends Component {  
constructor(props){
    super(props);
}
  render() {  
    return (  
      <div>  
           <h1 style={{color: "Blue"}}> Hello {this.props.name}!</h1> 
      </div>  
    );  
  }  
} 


--App.js--
import logo from './logo.svg';
import './App.css';
import Welcome from './Welcome.js';

function App() {
  return (
    <div>
        <Welcome name= "John Benchard" />
    </div>
  );
}

export default App;
	


3. Create a Component to add two numbers. 

--Add.js--
import React from 'react';
export default class Add extends React.Component{
    constructor(props){
        super(props);
        this.state = {first: 0, second: 0, sum: 0};
    }
    changeFirst=(event)=>{
        this.setState({first: Number(event.target.value)});
    }
    changeSecond=(event)=>{
        this.setState({second: Number(event.target.value)});
    }
    getSum=(event)=>{
        this.setState({sum: Number(this.state.first)+ Number(this.state.second)});
    }
    render(){
        const style = {
            width: "15%",
            height: "30px",
            borderRadius: "15px",
            border: "0px"
        }
        const button ={
            width: "15%",
            height: "30px",
            borderRadius: "15px",
            border: "0px",
            color: "white",
            backgroundColor: "rgb(4, 128, 245)"   
        }
        return(
            <div style = {this.props.style}>
                <table>
                <h2>Add Two Numbers</h2>
                <input type="text" id="first" placeholder="First" style={style}  onChange={this.changeFirst}></input>
                &nbsp;+&nbsp;
                <input type="text" id="second" placeholder="Second" style={style} onChange={this.changeSecond}></input>
                <input type="text" id="sum" value={this.state.sum} style={style} ></input>
                &nbsp;  &nbsp;&nbsp;&nbsp;
                <button type='button' onClick={this.getSum} style={button}> Add </button>
                <br></br>
                <br></br>
                </table>
            </div>
        );
    }
  
}


--App.js--
import logo from './logo.svg';
import './App.css';
import Add from './Add';

function App() {
  return (
    <div>
        <Add/>
    </div>
  );
}

export default App;



4. Modify the card component to add a props age and perform the validation,to check it’s a number. 

--Card.js
import { Component } from "react/cjs/react.development";
import PropTypes from 'prop-types';

export default class Card extends Component{
    constructor(props){
        super(props);
    }
    render(){
        return(
            <div>
                <h1> Hi I'm { this.props.firstName + ' ' + this.props.lastName } and I'm { this.props.age } years old. </h1>
            </div>
        );
    }
}  
  Card.propTypes = {
        firstName: PropTypes.string.isRequired,
        age : PropTypes.number
    }


--App.js--
import logo from './logo.svg';
import './App.css';
//*import Welcome from './Welcome.js';
import Card from './Card.js';

function App() {
  return (
    <div>
        <Card firstName='John' lastName = 'Espiritu'  age= '23'/>
    </div>
  );
}

export default App;



5. What is Virtual DOM in ReactJS 

The virtual DOM (VDOM) is a programming concept where an ideal, or “virtual”, representation of a UI is kept in memory and synced with the “real” DOM by a library such as ReactDOM

 